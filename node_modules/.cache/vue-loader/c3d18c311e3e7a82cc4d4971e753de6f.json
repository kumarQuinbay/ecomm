{"remainingRequest":"/Users/shradhaagarwal/Desktop/ecomm/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/shradhaagarwal/Desktop/ecomm/src/pages/registration.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/shradhaagarwal/Desktop/ecomm/src/pages/registration.vue","mtime":1631267501150},{"path":"/Users/shradhaagarwal/Desktop/ecomm/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/shradhaagarwal/Desktop/ecomm/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/shradhaagarwal/Desktop/ecomm/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/shradhaagarwal/Desktop/ecomm/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IHJlcXVpcmVkLCBlbWFpbCwgbWluTGVuZ3RoLCBzYW1lQXMgfSBmcm9tICd2dWVsaWRhdGUvbGliL3ZhbGlkYXRvcnMnCgpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ3JlZ2lzdHJhdGlvbicsCiAgZGF0YSAoKSB7CiAgICByZXR1cm4gewogICAgICB1c2VyOiB7CiAgICAgICAgZmlyc3ROYW1lOiAnJywKICAgICAgICBsYXN0TmFtZTogJycsCiAgICAgICAgZW1haWw6ICcnLAogICAgICAgIHBhc3N3b3JkOiAnJywKICAgICAgICBjb25maXJtUGFzc3dvcmQ6ICcnCiAgICAgIH0sCiAgICAgIHN1Ym1pdHRlZDogZmFsc2UKICAgIH0KICB9LAogIHZhbGlkYXRpb25zOiB7CiAgICB1c2VyOiB7CiAgICAgIGZpcnN0TmFtZTogeyByZXF1aXJlZCB9LAogICAgICBsYXN0TmFtZTogeyByZXF1aXJlZCB9LAogICAgICBlbWFpbDogeyByZXF1aXJlZCwgZW1haWwgfSwKICAgICAgcGFzc3dvcmQ6IHsgcmVxdWlyZWQsIG1pbkxlbmd0aDogbWluTGVuZ3RoKDYpIH0sCiAgICAgIGNvbmZpcm1QYXNzd29yZDogeyByZXF1aXJlZCwgc2FtZUFzUGFzc3dvcmQ6IHNhbWVBcygncGFzc3dvcmQnKSB9CiAgICB9CiAgfSwKICBtZXRob2RzOiB7CiAgICBoYW5kbGVTdWJtaXQgKGUpIHsKICAgICAgdGhpcy5zdWJtaXR0ZWQgPSB0cnVlCgogICAgICAvLyBzdG9wIGhlcmUgaWYgZm9ybSBpcyBpbnZhbGlkCiAgICAgIHRoaXMuJHYuJHRvdWNoKCkKICAgICAgaWYgKHRoaXMuJHYuJGludmFsaWQpIHsKICAgICAgICByZXR1cm4KICAgICAgfQoKICAgICAgYWxlcnQoJ1NVQ0NFU1MhISA6LSlcblxuJyArIEpTT04uc3RyaW5naWZ5KHRoaXMudXNlcikpCiAgICB9CiAgfQp9Cg=="},{"version":3,"sources":["registration.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsDA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"registration.vue","sourceRoot":"src/pages","sourcesContent":["<template>\n    <div class=\"jumbotron\">\n        <div class=\"container\">\n            <div class=\"row\">\n                <div class=\"col-sm-8 offset-sm-2\">\n                    <div>\n                        <h2>Registration Form</h2>\n                        <form @submit.prevent=\"handleSubmit\">\n                            <div class=\"form-group\">\n                                <label for=\"firstName\">First Name</label>\n                                <input type=\"text\" v-model=\"user.firstName\" id=\"firstName\" name=\"firstName\" class=\"form-control\" :class=\"{ 'is-invalid': submitted && $v.user.firstName.$error }\" />\n                                <div v-if=\"submitted && !$v.user.firstName.required\" class=\"invalid-feedback\">First Name is required</div>\n                            </div>\n                            <div class=\"form-group\">\n                                <label for=\"lastName\">Last Name</label>\n                                <input type=\"text\" v-model=\"user.lastName\" id=\"lastName\" name=\"lastName\" class=\"form-control\" :class=\"{ 'is-invalid': submitted && $v.user.lastName.$error }\" />\n                                <div v-if=\"submitted && !$v.user.lastName.required\" class=\"invalid-feedback\">Last Name is required</div>\n                            </div>\n                            <div class=\"form-group\">\n                                <label for=\"email\">Email</label>\n                                <input type=\"email\" v-model=\"user.email\" id=\"email\" name=\"email\" class=\"form-control\" :class=\"{ 'is-invalid': submitted && $v.user.email.$error }\" />\n                                <div v-if=\"submitted && $v.user.email.$error\" class=\"invalid-feedback\">\n                                    <span v-if=\"!$v.user.email.required\">Email is required</span>\n                                    <span v-if=\"!$v.user.email.email\">Email is invalid</span>\n                                </div>\n                            </div>\n                            <div class=\"form-group\">\n                                <label for=\"password\">Password</label>\n                                <input type=\"password\" v-model=\"user.password\" id=\"password\" name=\"password\" class=\"form-control\" :class=\"{ 'is-invalid': submitted && $v.user.password.$error }\" />\n                                <div v-if=\"submitted && $v.user.password.$error\" class=\"invalid-feedback\">\n                                    <span v-if=\"!$v.user.password.required\">Password is required</span>\n                                    <span v-if=\"!$v.user.password.minLength\">Password must be at least 6 characters</span>\n                                </div>\n                            </div>\n                            <div class=\"form-group\">\n                                <label for=\"confirmPassword\">Confirm Password</label>\n                                <input type=\"password\" v-model=\"user.confirmPassword\" id=\"confirmPassword\" name=\"confirmPassword\" class=\"form-control\" :class=\"{ 'is-invalid': submitted && $v.user.confirmPassword.$error }\" />\n                                <div v-if=\"submitted && $v.user.confirmPassword.$error\" class=\"invalid-feedback\">\n                                    <span v-if=\"!$v.user.confirmPassword.required\">Confirm Password is required</span>\n                                    <span v-else-if=\"!$v.user.confirmPassword.sameAsPassword\">Passwords must match</span>\n                                </div>\n                            </div>\n                            <div class=\"form-group\">\n                                <button class=\"btn btn-primary\">Register</button>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nimport { required, email, minLength, sameAs } from 'vuelidate/lib/validators'\n\nexport default {\n  name: 'registration',\n  data () {\n    return {\n      user: {\n        firstName: '',\n        lastName: '',\n        email: '',\n        password: '',\n        confirmPassword: ''\n      },\n      submitted: false\n    }\n  },\n  validations: {\n    user: {\n      firstName: { required },\n      lastName: { required },\n      email: { required, email },\n      password: { required, minLength: minLength(6) },\n      confirmPassword: { required, sameAsPassword: sameAs('password') }\n    }\n  },\n  methods: {\n    handleSubmit (e) {\n      this.submitted = true\n\n      // stop here if form is invalid\n      this.$v.$touch()\n      if (this.$v.$invalid) {\n        return\n      }\n\n      alert('SUCCESS!! :-)\\n\\n' + JSON.stringify(this.user))\n    }\n  }\n}\n</script>\n"]}]}